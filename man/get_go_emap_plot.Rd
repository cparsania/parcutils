% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/viz_related.R
\name{get_go_emap_plot}
\alias{get_go_emap_plot}
\title{Perform gene ontology analysis and visualization for DE genesets in one go.}
\usage{
get_go_emap_plot(
  x,
  org_db = org.Hs.eg.db::org.Hs.eg.db,
  universe = NULL,
  ont_type = "BP",
  p_adj_method = "BH",
  pval_cutoff = 0.05,
  qval_cutoff = 0.05,
  simplify = TRUE,
  min_geneset_size = 10,
  max_geneset_size = 500,
  go_similarity_cutoff = 0.8,
  show_n_terms = 30,
  color_terms_by = "p.adjust"
)
}
\arguments{
\item{x}{an object of class 'parcutils' or 'parcutils_ir'.}

\item{org_db}{an object of the class class OrgDB, default \code{org.Hs.eg.db}}

\item{universe}{a character vector of genes, default NULL,  to be used as background genes for GO enrichment analysis. Currently supports only ENSEMBL gene id - e.g. ENSMUSG00000030787.
When set to NULL all genes from x will be used as background genes.}

\item{ont_type}{a character string, default \code{"BP"}, denoting ontology type. Values can be one of the \code{"BP", "MF" , "CC"}}

\item{p_adj_method}{a character string, default \code{"BH"}, denoting a method for p-adjustment. Values can be one of the  \code{"holm", "hochberg", "hommel", "bonferroni", "BH", "BY", "fdr", "none"}}

\item{pval_cutoff}{a numeric, default \code{0.05} denoting p-value cutoff.}

\item{qval_cutoff}{a numeric, default \code{0.05} denoting q-value cutoff.}

\item{min_geneset_size}{a numeric, default \code{10}, denoting minimal size of genes annotated by ontology term for testing.}

\item{max_geneset_size}{a numeric, default \code{500}, denoting maximal size of genes annotated by ontology term for testing.}

\item{go_similarity_cutoff}{a numeric value, default \code{0.8}, denoting gene ontology similarity cutoff.}

\item{show_n_terms}{a numeric, default \code{30}, denoting number of gene ontology terms to show in the plot.}

\item{color_terms_by}{a character string, default \code{"p.adjust"}, denoting a variable to color gene ontology terms.}
}
\value{

}
\description{
Perform gene ontology analysis and visualization for DE genesets in one go.
}
\examples{
\dontrun{
count_file <- system.file("extdata","toy_counts.txt" , package = "parcutils")
count_data <- readr::read_delim(count_file, delim = "\t", show_col_types = FALSE)

sample_info <- count_data \%>\% colnames() \%>\% .[-1]  \%>\%
  tibble::tibble(samples = . , groups = rep(c("control" ,"treatment1" , "treatment2"), each = 3) )


res <- parcutils::run_deseq_analysis(counts = count_data \%>\% dplyr::mutate(gene_id = stringr::str_replace(gene_id, ":.*","")),
                                     sample_info = sample_info,
                                     column_geneid = "gene_id" ,
                                     group_numerator = c("treatment1", "treatment2") ,
                                     group_denominator = c("control"))

go_out <- get_go_emap_plot(res)

# display plot
go_out$go_emap_plots

# display table
 go_out$go_enrichment_output \%>\% tibble::as_tibble()
}
}
