% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rnaseq_related.R
\name{get_genes_by_regulation}
\alias{get_genes_by_regulation}
\title{Get genes based on their differential regulation}
\usage{
get_genes_by_regulation(
  x,
  sample_comparisons,
  regulation = "both",
  simplify = FALSE
)
}
\arguments{
\item{x}{an abject of class "parcutils". This is an output of the function \code{\link[=run_deseq_analysis]{run_deseq_analysis()}}.}

\item{sample_comparisons}{a character vector denoting  sample comparisons for which genes to be obtained.}

\item{regulation}{a character string, default \code{both}. Values can be one of the \code{up}, \code{down}, \code{both}, \code{other}, \code{all}.
\itemize{
\item up : returns all up regulated genes.
\item down : returns all down regulated genes.
\item both : returns all up and down regulated genes.
\item other : returns genes other than up and down regulated genes.
}}

\item{simplify}{logical, default FALSE, if TRUE returns result in a dataframe format.
\itemize{
\item all : returns all genes.
}}
}
\value{
a list or dataframe.
}
\description{
Get genes based on their differential regulation
}
\details{
For a given differential comparison this function returns \code{up}, \code{down}, \code{both}, \code{other} and \code{all} genes.
}
\examples{
count_file <- system.file("extdata","toy_counts.txt" , package = "parcutils")
count_data <- readr::read_delim(count_file, delim = "\t")

sample_info <- count_data \%>\% colnames() \%>\% .[-1]  \%>\%
 tibble::tibble(samples = . , groups = rep(c("control" ,"treatment1" , "treatment2"), each = 3) )


res <- run_deseq_analysis(counts = count_data ,
                         sample_info = sample_info,
                         column_geneid = "gene_id" ,
                         group_numerator = c("treatment1", "treatment2") ,
                         group_denominator = c("control"),
                         column_samples = c("control_rep1", "treat1_rep1", "treat2_rep1", "control_rep2", "treat1_rep2", "treat2_rep2", "control_rep3", "treat1_rep3", "treat2_rep3"))

# get both up and down regulated genes
get_genes_by_regulation(x = res, sample_comparisons = c("treatment1_VS_control")) \%>\% head()

# get up genes only
get_genes_by_regulation(x = res, sample_comparisons = c("treatment1_VS_control") , regul = "up") \%>\% head()

# get down genes only
get_genes_by_regulation(x = res, sample_comparisons = c("treatment1_VS_control") , regul = "down") \%>\% head()

# get genes other than up and down
get_genes_by_regulation(x = res, sample_comparisons = c("treatment1_VS_control") , regul = "other") \%>\% head()

# Simplify output for multiple sample comparisons
get_genes_by_regulation(x = res, sample_comparisons = res$comp, simplify = T)
}
